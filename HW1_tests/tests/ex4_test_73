.global _start

.section .text
    mov $root, %rax
    cmpq $node10, (%rax)
    movq $node10, %rax
    cmpq $10, (%rax)
    cmpq $node6, 8(%rax)
    cmpq $node14, 16(%rax)
    movq $node6, %rax
    cmpq $6, (%rax)
    cmpq $node5, 8(%rax)
    cmpq $node8, 16(%rax)
    movq $node14, %rax
    cmpq $14, (%rax)
    cmpq $node11, 8(%rax)
    cmpq $new_node, 16(%rax)
    movq $node5, %rax
    cmpq $5, (%rax)
    cmpq $node4, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node8, %rax
    cmpq $8, (%rax)
    cmpq $node7, 8(%rax)
    cmpq $node9, 16(%rax)
    movq $node11, %rax
    cmpq $11, (%rax)
    cmpq $0, 8(%rax)
    cmpq $node12, 16(%rax)
    movq $new_node, %rax
    cmpq $18, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node4, %rax
    cmpq $4, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node7, %rax
    cmpq $7, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node9, %rax
    cmpq $9, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node12, %rax
    cmpq $12, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root:
  .quad node10
node10:
  .quad 10
  .quad node6
  .quad node14
node6:
  .quad 6
  .quad node5
  .quad node8
node14:
  .quad 14
  .quad node11
  .quad 0
node5:
  .quad 5
  .quad node4
  .quad 0
node8:
  .quad 8
  .quad node7
  .quad node9
node11:
  .quad 11
  .quad 0
  .quad node12
node4:
  .quad 4
  .quad 0
  .quad 0
node7:
  .quad 7
  .quad 0
  .quad 0
node9:
  .quad 9
  .quad 0
  .quad 0
node12:
  .quad 12
  .quad 0
  .quad 0
new_node: .quad 18, 0, 0
