.global _start

.section .text
    mov $root, %rax
    cmpq $node8, (%rax)
    movq $node8, %rax
    cmpq $8, (%rax)
    cmpq $node2, 8(%rax)
    cmpq $node11, 16(%rax)
    movq $node2, %rax
    cmpq $2, (%rax)
    cmpq $node1, 8(%rax)
    cmpq $node7, 16(%rax)
    movq $node11, %rax
    cmpq $11, (%rax)
    cmpq $node10, 8(%rax)
    cmpq $node14, 16(%rax)
    movq $node1, %rax
    cmpq $1, (%rax)
    cmpq $node0, 8(%rax)
    cmpq $new_node, 16(%rax)
    movq $node7, %rax
    cmpq $7, (%rax)
    cmpq $node6, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node10, %rax
    cmpq $10, (%rax)
    cmpq $node9, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node14, %rax
    cmpq $14, (%rax)
    cmpq $node13, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node0, %rax
    cmpq $0, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $new_node, %rax
    cmpq $12, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node6, %rax
    cmpq $6, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node9, %rax
    cmpq $9, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node13, %rax
    cmpq $13, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root:
  .quad node8
node8:
  .quad 8
  .quad node2
  .quad node11
node2:
  .quad 2
  .quad node1
  .quad node7
node11:
  .quad 11
  .quad node10
  .quad node14
node1:
  .quad 1
  .quad node0
  .quad 0
node7:
  .quad 7
  .quad node6
  .quad 0
node10:
  .quad 10
  .quad node9
  .quad 0
node14:
  .quad 14
  .quad node13
  .quad 0
node0:
  .quad 0
  .quad 0
  .quad 0
node6:
  .quad 6
  .quad 0
  .quad 0
node9:
  .quad 9
  .quad 0
  .quad 0
node13:
  .quad 13
  .quad 0
  .quad 0
new_node: .quad 12, 0, 0
