.global _start

.section .text
    mov $root, %rax
    cmpq $node3, (%rax)
    movq $node3, %rax
    cmpq $3, (%rax)
    cmpq $node2, 8(%rax)
    cmpq $node4, 16(%rax)
    movq $node2, %rax
    cmpq $2, (%rax)
    cmpq $node0, 8(%rax)
    cmpq $new_node, 16(%rax)
    movq $node4, %rax
    cmpq $4, (%rax)
    cmpq $0, 8(%rax)
    cmpq $node5, 16(%rax)
    movq $node0, %rax
    cmpq $0, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $new_node, %rax
    cmpq $6, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node5, %rax
    cmpq $5, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root:
  .quad node3
node3:
  .quad 3
  .quad node2
  .quad node4
node2:
  .quad 2
  .quad node0
  .quad 0
node4:
  .quad 4
  .quad 0
  .quad node5
node0:
  .quad 0
  .quad 0
  .quad 0
node5:
  .quad 5
  .quad 0
  .quad 0
new_node: .quad 6, 0, 0
