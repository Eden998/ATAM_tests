.global _start

.section .text
    mov $root, %rax
    cmpq $node0, (%rax)
    movq $node0, %rax
    cmpq $0, (%rax)
    cmpq $0, 8(%rax)
    cmpq $node5, 16(%rax)
    movq $node5, %rax
    cmpq $5, (%rax)
    cmpq $node1, 8(%rax)
    cmpq $node6, 16(%rax)
    movq $node1, %rax
    cmpq $1, (%rax)
    cmpq $0, 8(%rax)
    cmpq $new_node, 16(%rax)
    movq $node6, %rax
    cmpq $6, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $new_node, %rax
    cmpq $11, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root:
  .quad node0
node0:
  .quad 0
  .quad 0
  .quad node5
node5:
  .quad 5
  .quad node1
  .quad node6
node1:
  .quad 1
  .quad 0
  .quad 0
node6:
  .quad 6
  .quad 0
  .quad 0
new_node: .quad 11, 0, 0
