.global _start

.section .text
    mov $root, %rax
    cmpq $node1, (%rax)
    movq $node1, %rax
    cmpq $1, (%rax)
    cmpq $node0, 8(%rax)
    cmpq $node3, 16(%rax)
    movq $node0, %rax
    cmpq $0, (%rax)
    cmpq $0, 8(%rax)
    cmpq $new_node, 16(%rax)
    movq $node3, %rax
    cmpq $3, (%rax)
    cmpq $node2, 8(%rax)
    cmpq $node10, 16(%rax)
    movq $new_node, %rax
    cmpq $8, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node2, %rax
    cmpq $2, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node10, %rax
    cmpq $10, (%rax)
    cmpq $node4, 8(%rax)
    cmpq $node13, 16(%rax)
    movq $node4, %rax
    cmpq $4, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $node13, %rax
    cmpq $13, (%rax)
    cmpq $0, 8(%rax)
    cmpq $0, 16(%rax)
    movq $60, %rax
    movq $0, %rdi
    syscall

bad_exit:
    movq $60, %rax
    movq $1, %rdi
    syscall

.section .data
root:
  .quad node1
node1:
  .quad 1
  .quad node0
  .quad node3
node0:
  .quad 0
  .quad 0
  .quad 0
node3:
  .quad 3
  .quad node2
  .quad node10
node2:
  .quad 2
  .quad 0
  .quad 0
node10:
  .quad 10
  .quad node4
  .quad node13
node4:
  .quad 4
  .quad 0
  .quad 0
node13:
  .quad 13
  .quad 0
  .quad 0
new_node: .quad 8, 0, 0
